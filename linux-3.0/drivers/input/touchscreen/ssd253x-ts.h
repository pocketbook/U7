/**************************************************************
使用前注意通道数，驱动默认使用通道是sense 
大于drive否则需要将使用到的DRIVENO与SENSENO调换
此情况包括0x66和0x67寄存器，但不必修改。
***************************************************************/

#define DRIVENO	10
#define SENSENO	15
#define ENABLE_INT		2	// 0->Polling, 1->Interupt, 2->Hybrid
#define EdgeDisable		1	// if Edge Disable, set it to 1, else reset to 0, OR  SSD2533 set 0
#define RunningAverageMode	2	//{0,8},{5,3},{6,2},{7,1}
#define RunningAverageDist	4	// Threshold Between two consecutive points
#define MicroTimeTInterupt	25000000// 100Hz - 10,000,000us
#define FINGERNO		5//10

#define SSDS53X_SCREEN_MAX_X    800
#define SSDS53X_SCREEN_MAX_Y    480

#define IRQ_TP                 (29)
#define TP_BASSADDRESS         (0xf1c25000)
#define TP_CTRL0               (0x00)
#define TP_CTRL1               (0x04)
#define TP_CTRL2               (0x08)
#define TP_CTRL3               (0x0c)
#define TP_INT_FIFOC           (0x10)
#define TP_INT_FIFOS           (0x14)
#define TP_TPR                 (0x18)
#define TP_CDAT                (0x1c)
#define TEMP_DATA              (0x20)
#define TP_DATA                (0x24)


#define ADC_FIRST_DLY          (0x1<<24)
#define ADC_FIRST_DLY_MODE     (0x1<<23) 
#define ADC_CLK_SELECT         (0x0<<22)
#define ADC_CLK_DIVIDER        (0x2<<20)    
//#define CLK                    (6)
#define CLK                    (7)
#define FS_DIV                 (CLK<<16)
#define ACQ                    (0x3f)
#define T_ACQ                  (ACQ)

#define STYLUS_UP_DEBOUNCE     (0<<12)
#define STYLUS_UP_DEBOUCE_EN   (0<<9)
#define TOUCH_PAN_CALI_EN      (1<<6)
#define TP_DUAL_EN             (1<<5)
#define TP_MODE_EN             (1<<4)
#define TP_ADC_SELECT          (0<<3)
#define ADC_CHAN_SELECT        (0)

//#define TP_SENSITIVE_ADJUST    (0xf<<28)
#define TP_SENSITIVE_ADJUST    (0xf<<28)       //mark by young for test angda 5" 0xc
#define TP_MODE_SELECT         (0x1<<26)
#define PRE_MEA_EN             (0x1<<24)
#define PRE_MEA_THRE_CNT       (0x1f40<<0)         //0x1f40


#define FILTER_EN              (1<<2)
#define FILTER_TYPE            (0x01<<0)

#define TP_DATA_IRQ_EN         (1<<16)
#define TP_DATA_XY_CHANGE      (0<<13)       //tp_exchange_x_y
#define TP_FIFO_TRIG_LEVEL     (3<<8)
#define TP_FIFO_FLUSH          (1<<4)
#define TP_UP_IRQ_EN           (1<<1)
#define TP_DOWN_IRQ_EN         (1<<0)

#define FIFO_DATA_PENDING      (1<<16)
#define TP_UP_PENDING          (1<<1)
#define TP_DOWN_PENDING        (1<<0)

// gpio base address
//#define PIO_BASE_ADDRESS             (0x01c20800)
//#define PIO_RANGE_SIZE               (0x400)
#define IRQ_EINT21                   (21) 
#define IRQ_EINT29                   (29) 
#define PIO_INT_STAT_OFFSET          (0x214)
#define PIO_INT_CTRL_OFFSET          (0x210)
#define PIO_INT_CFG2_OFFSET          (0x208)
#define PIO_INT_CFG3_OFFSET          (0x20c)

#define IRQ_EINT21                   (21) 
#define IRQ_EINT29                   (29)


#define SSD253x_TOUCH_KEY
#undef SSD253x_TOUCH_KEY            //touch pandel support;

struct ChipSetting {
	char No;
	char Reg;
	char Data1;
	char Data2;
};

#ifdef SSD253x_TOUCH_KEY
//static uint32_t key_code[4] = {KEY_MENU, KEY_HOME, KEY_BACK, KEY_SEARCH }; 
#endif


#define SSD253x_CUT_EDGE    //0x8b must be 0x00;  EdgeDisable set 0
//#undef  SSD253x_CUT_EDGE            //15X10 changle open this define； 

#ifdef SSD253x_CUT_EDGE
		#define XPOS_MAX (SENSENO -EdgeDisable) *64
		#define YPOS_MAX (DRIVENO -EdgeDisable) *64
#endif

// SSD2533 Setting
// Touch Panel Example
struct ChipSetting ssd253xcfgTable[]={							
{1,0x06,0x16,0x00},
{1,0x06,0x16,0x00},
{1,0x07,0x1e,0x00},
{2,0x08,0x00,0x0a},
{2,0x09,0x00,0x49},
{2,0x0a,0x00,0x48},
{2,0x0b,0x00,0x47},
{2,0x0c,0x00,0x46},
{2,0x0d,0x00,0x65},
{2,0x0e,0x00,0x64},
{2,0x0f,0x00,0x63},
{2,0x10,0x00,0x62},
{2,0x11,0x00,0x61},
{2,0x12,0x00,0x60},
{2,0x13,0x00,0xeb},
{2,0x14,0x00,0xec},
{2,0x15,0x00,0xed},
{2,0x16,0x00,0xee},
{2,0x17,0x00,0xef},
{2,0x18,0x00,0xf0},
{2,0x19,0x00,0xf1},
{2,0x1a,0x00,0xf2},
{2,0x1b,0x00,0xf3},
{2,0x1c,0x00,0xf4},
{2,0x1d,0x00,0x75},
{2,0x1e,0x00,0x56},
{1,0x1f,0x01,0x00},
{1,0xd5,0x06,0x00},
{1,0xd8,0x03,0x00},
{1,0x2a,0x07,0x00},
{1,0x2c,0x01,0x00},
{1,0x2e,0x0b,0x00},
{1,0x2f,0x01,0x00},
{1,0x30,0x05,0x00},
{1,0x31,0x08,0x00},
{1,0xd7,0x04,0x00},
{1,0xdb,0x01,0x00},
{2,0x33,0x00,0x00},
{2,0x34,0x00,0x30},
{2,0x35,0x00,0x00},
{2,0x36,0x00,0x10},
{1,0x37,0x02,0x00},
{1,0x39,0x02,0x00},
{1,0x53,0x12,0x00},
{2,0x54,0x00,0x80},
{2,0x55,0x00,0x80},
{1,0x5b,0x20,0x00},
{2,0x5e,0x00,0x60},
{1,0x3d,0x01,0x00},
{1,0x40,0xf0,0x00},
{1,0x44,0x01,0x00},
{1,0x8a,0x05,0x00},
{1,0x65,0x01,0x00},
{2,0x66,0x84,0x18},
{2,0x67,0x85,0x88},
{1,0x68,0x00,0x00},
{1,0x69,0x00,0x00},
{2,0x7a,0xff,0xff},
{2,0x7b,0x00,0x00},
{1,0x25,0x20,0x00},	
};
struct ChipSetting  CONFIG_BK7032_SS253X_ZHONGCHU[]= {
{1,0x06,0x0e,0x00},
{1,0x06,0x0e,0x00},
{1,0x07,0x09,0x00},
{2,0x08,0x00,0x14},
{2,0x09,0x00,0x13},
{2,0x0a,0x00,0x12},
{2,0x0b,0x00,0x11},
{2,0x0c,0x00,0x30},
{2,0x0d,0x00,0xef},
{2,0x0e,0x00,0xee},
{2,0x0f,0x00,0xed},
{2,0x10,0x00,0xec},
{2,0x11,0x00,0xeb},
{2,0x12,0x00,0xea},
{2,0x13,0x00,0xe9},
{2,0x14,0x00,0xe8},
{2,0x15,0x00,0xe7},
{2,0x16,0x00,0xe6},
{1,0x1f,0x00,0x00},
{1,0xd5,0x05,0x00},
{1,0xd8,0x04,0x00},
{1,0x2a,0x07,0x00},
{1,0x2c,0x01,0x00},
{1,0x2e,0x0b,0x00},
{1,0x2f,0x01,0x00},
{1,0x30,0x03,0x00},
{1,0x31,0x05,0x00},
{1,0xd7,0x04,0x00},
{1,0xdb,0x01,0x00},
{2,0x33,0x00,0x00},
{2,0x34,0x00,0x45},
{2,0x35,0x00,0x40},
{2,0x36,0x00,0x30},
{1,0x37,0x00,0x00},
{1,0x39,0x02,0x00},
{1,0x53,0x16,0x00},
{2,0x54,0x01,0x00},
{2,0x55,0x01,0x00},
{1,0x56,0x00,0x00},
{2,0x5e,0x00,0x60},
{1,0x5b,0x20,0x00},
{1,0x8a,0x05,0x00},
{1,0x3d,0x00,0x00},
{1,0x40,0xf0,0x00},
{1,0x44,0x01,0x00},
{1,0x65,0x03,0x00},
{2,0x66,0xff,0xf0},
{2,0x67,0xff,0xf0},
{2,0x7a,0xff,0xff},
{2,0x7b,0x00,0x00},
{1,0x25,0x0a,0x00},
};
struct ChipSetting  CONFIG_M828AC_SS253X_QIUTIAN[]= {
#if 0
{1,0x06,0x0e,0x00},
{1,0x06,0x0e,0x00},
{1,0x07,0x09,0x00},
{2,0x08,0x00,0xf4},
{2,0x09,0x00,0xf3},
{2,0x0a,0x00,0xf2},
{2,0x0b,0x00,0xf1},
{2,0x0c,0x00,0xf0},
{2,0x0d,0x00,0xef},
{2,0x0e,0x00,0xee},
{2,0x0f,0x00,0xed},
{2,0x10,0x00,0xec},
{2,0x11,0x00,0xeb},
{2,0x12,0x00,0xea},
{2,0x13,0x00,0xe9},
{2,0x14,0x00,0xe8},
{2,0x15,0x00,0x47},
{2,0x16,0x00,0xa6},
{1,0x1f,0x00,0x00},
{1,0xd5,0x05,0x00},
{1,0xd8,0x05,0x00},
{1,0x2a,0x0b,0x00},
{1,0x2c,0x01,0x00},
{1,0x2e,0x0b,0x00},
{1,0x2f,0x01,0x00},
{1,0x30,0x03,0x00},
{1,0x31,0x05,0x00},
{1,0xd7,0x04,0x00},
{1,0xdb,0x04,0x00},
{2,0x33,0x00,0x00},
{2,0x34,0x00,0x2a},
{2,0x35,0x00,0x00},
{2,0x36,0x00,0x30},
{1,0x37,0x00,0x00},
{1,0x38,0x01,0x00},
{1,0x39,0x02,0x00},
{1,0x53,0x20,0x00},
{2,0x54,0x00,0x40},
{2,0x55,0x00,0x40},
{2,0x5e,0x00,0x48},
{1,0x5b,0x10,0x00},
{1,0x8a,0x0a,0x00},
{1,0x8c,0xa0,0x00},
{1,0x3d,0x00,0x00},
{1,0x40,0xf0,0x00},
{1,0x44,0x00,0x00},
{1,0x65,0x00,0x00},
{2,0x66,0xff,0xf0},
{2,0x67,0xff,0xf0},
{2,0x7a,0xff,0xff},
{2,0x7b,0x00,0x00},
{1,0x25,0x05,0x00},
	#else
{ 1, 0x06, 0x0E, 0X00},
{ 1, 0x06, 0x0E, 0X00},	
{ 1, 0x07, 0x09, 0X00},	
{ 2, 0x08, 0x00, 0X34},	
{ 2, 0x09, 0x00, 0x33},	
{ 2, 0x0A, 0x00, 0x32},	
{ 2, 0x0B, 0x00, 0x31},	
{ 2, 0x0C, 0x00, 0x30},	
{ 2, 0x0D, 0x00, 0x2F},	
{ 2, 0x0E, 0x00, 0x2E},	
{ 2, 0x0F, 0x00, 0x2D},	
{ 2, 0x10, 0x00, 0X2C},	
{ 2, 0x11, 0x00, 0x4B},	
{ 2, 0x12, 0x00, 0x46},	
{ 2, 0x13, 0x00, 0x47},	
{ 2, 0x14, 0x00, 0X48},	
{ 2, 0x15, 0x00, 0x49},	
{ 2, 0x16, 0x00, 0x2A},	
{ 1, 0x1F, 0x00, 0x00},
{ 1, 0xD5, 0x05, 0x00},			
{ 1, 0xD8, 0x02, 0x00},//7	
{ 1, 0x2A, 0x07, 0x00},			
{ 1, 0x2C, 0x01, 0x00},			
{ 1, 0x2E, 0x0B, 0x00},			
{ 1, 0x2F, 0x01, 0x00},						
{ 1, 0x30, 0x06, 0x00},  //7			
{ 1, 0x31, 0x0a, 0x00}, //9		
{ 1, 0xD7, 0x04, 0x00},			
{ 1, 0xDB, 0x02, 0x00},
{ 2, 0x33, 0x00, 0x00},//xiaomianji		
{ 2, 0X34, 0X00, 0X50},//30
{ 2, 0x35, 0x00, 0x40},//the ic problem is that could be  read and write but havenot interrupt		
{ 2, 0x36, 0x10, 0x30},//damianji	1a		
{ 1, 0x37, 0x00, 0x00},			
{ 1, 0x39, 0x02, 0x00},			
{ 1, 0x3D, 0x00, 0x00},
{ 1, 0x40, 0xf0, 0x00},
{ 1, 0x44, 0x01, 0x00},
{ 1, 0X53, 0X16, 0X00},
{ 2, 0x54, 0x00, 0x50},			
{ 2, 0x55, 0x00, 0x50},			
{ 1, 0x5B, 0x20, 0x00},//10			
{ 2, 0x5E, 0x00, 0x60},		
{ 1, 0x8A, 0x07, 0x00},//figer num	
{ 1, 0x65, 0x03, 0x00},
{ 2, 0X66, 0xff, 0xf0},//分辨率	y 
{ 2, 0X67, 0xff, 0xf0},//分辨率	x   (64*15)*(64*10)  =960*640
{ 2, 0x7A, 0xFF, 0xFF},			
{ 2, 0x7B, 0x00, 0x0F},
{ 1, 0x25, 0x10, 0x00},
#endif
};
struct ChipSetting  CONFIG_M828AC_SS253X_PINGBO[]= {
	#if 0
{1,0x06,0x0e,0x00},
{1,0x06,0x0e,0x00},
{1,0x07,0x09,0x00},
{2,0x08,0x00,0xd4},
{2,0x09,0x00,0xd3},
{2,0x0a,0x00,0xf2},
{2,0x0b,0x00,0xf1},
{2,0x0c,0x00,0xf0},
{2,0x0d,0x00,0xef},
{2,0x0e,0x00,0xee},
{2,0x0f,0x00,0xed},
{2,0x10,0x00,0xec},
{2,0x11,0x00,0xeb},
{2,0x12,0x00,0xe6},
{2,0x13,0x00,0xe7},
{2,0x14,0x00,0xe8},
{2,0x15,0x00,0xe9},
{2,0x16,0x00,0xea},
{1,0x1f,0x00,0x00},
{1,0xd5,0x04,0x00},
{1,0xd8,0x01,0x00},
{1,0x2a,0x06,0x00},
{1,0x2c,0x01,0x00},
{1,0x2e,0x0b,0x00},
{1,0x2f,0x01,0x00},
{1,0x30,0x02,0x00},
{1,0x31,0x06,0x00},
{1,0xd7,0x04,0x00},
{1,0xdb,0x02,0x00},
{2,0x33,0x00,0x00},
{2,0x34,0x00,0x50},
{2,0x35,0x00,0x40},
{2,0x36,0x00,0x20},
{1,0x37,0x04,0x00},
{1,0x39,0x02,0x00},
{1,0x53,0x16,0x00},
{2,0x54,0x00,0x80},
{2,0x55,0x00,0x80},
{1,0x5b,0x20,0x00},
{2,0x5e,0x00,0x60},
{1,0x3d,0x00,0x00},
{1,0x40,0xb0,0x00},
{1,0x44,0x01,0x00},
{1,0x8a,0x05,0x00},
{1,0x8c,0xa0,0x00},
{1,0x65,0x03,0x00},
{2,0x66,0xff,0xf0},
{2,0x67,0xff,0xf0},
{2,0x7a,0xff,0xff},
{2,0x7b,0x00,0x00},
{1,0x25,0x0a,0x00},
#else
{1,0x04,0x00,0x00},
{1,0x06,0x0e,0x00},
{1,0x06,0x0e,0x00},
{1,0x07,0x09,0x00},
{2,0x08,0x00,0xb4},
{2,0x09,0x00,0x53},
{2,0x0a,0x00,0x52},
{2,0x0b,0x00,0x91},
{2,0x0c,0x00,0x90},
{2,0x0d,0x00,0xef},
{2,0x0e,0x00,0xee},
{2,0x0f,0x00,0xed},
{2,0x10,0x00,0xac},
{2,0x11,0x00,0xab},
{2,0x12,0x00,0xa6},
{2,0x13,0x00,0xa7},
{2,0x14,0x00,0xa8},
{2,0x15,0x00,0xa9},
{2,0x16,0x00,0xea},
{1,0x1f,0x00,0x00},
{1,0xd5,0x04,0x00},
{1,0xd8,0x05,0x00},
{1,0x2a,0x07,0x00},
{1,0x2c,0x01,0x00},
{1,0x2e,0x0b,0x00},
{1,0x2f,0x01,0x00},
{1,0x30,0x04,0x00},
{1,0x31,0x08,0x00},
{1,0xd7,0x04,0x00},
{1,0xdb,0x03,0x00},
{2,0x33,0x00,0x00},
{2,0x34,0x00,0x46},
{2,0x35,0x00,0x12},
{2,0x36,0x00,0x12},
{1,0x37,0x00,0x00},
{1,0x39,0x02,0x00},
{1,0x53,0x08,0x00},
{2,0x54,0x00,0x80},
{2,0x55,0x00,0x80},
{1,0x56,0x03,0x00},
{1,0x5b,0x01,0x00},
{1,0x59,0x01,0x00},
{2,0x5e,0x02,0x00},
{1,0x3d,0x00,0x00},
{1,0x40,0x00,0x00},
{1,0x44,0x01,0x00},
{1,0x8a,0x05,0x00},
{1,0x8c,0xf0,0x00},
{1,0x65,0x03,0x00},
{2,0x66,0xff,0xf0},
{2,0x67,0xff,0xf0},
{2,0x7a,0xff,0xff},
{2,0x7b,0x00,0x00},
{1,0x25,0x0a,0x00},
#endif
};
struct ChipSetting  CONFIG_M876A13_SS253X_QIUTIAN[]= {
	#if 1
{1,0x06,0x0e,0x00},
{1,0x06,0x0e,0x00},
{1,0x07,0x09,0x00},
{2,0x08,0x00,0xf4},
{2,0x09,0x00,0xf3},
{2,0x0a,0x00,0xf2},
{2,0x0b,0x00,0xf1},
{2,0x0c,0x00,0xf0},
{2,0x0d,0x00,0xef},
{2,0x0e,0x00,0xee},
{2,0x0f,0x00,0xed},
{2,0x10,0x00,0xec},
{2,0x11,0x00,0xeb},
{2,0x12,0x00,0xea},
{2,0x13,0x00,0xe9},
{2,0x14,0x00,0xe8},
{2,0x15,0x00,0x47},
{2,0x16,0x00,0xa6},
{1,0x1f,0x00,0x00},
{1,0xd5,0x05,0x00},
{1,0xd8,0x05,0x00},
{1,0x2a,0x0b,0x00},
{1,0x2c,0x01,0x00},
{1,0x2e,0x0b,0x00},
{1,0x2f,0x01,0x00},
{1,0x30,0x03,0x00},
{1,0x31,0x05,0x00},
{1,0xd7,0x04,0x00},
{1,0xdb,0x04,0x00},
{2,0x33,0x00,0x00},
{2,0x34,0x00,0x2a},//
{2,0x35,0x00,0x00},
{2,0x36,0x00,0x30},
{1,0x37,0x00,0x00},
{1,0x38,0x01,0x00},
{1,0x39,0x02,0x00},
{1,0x53,0x20,0x00},
{2,0x54,0x00,0x40},
{2,0x55,0x00,0x40},
{2,0x5e,0x00,0x48},
{1,0x5b,0x10,0x00},
{1,0x8a,0x0a,0x00},
{1,0x8c,0xa0,0x00},
{1,0x3d,0x00,0x00},
{1,0x40,0xf0,0x00},
{1,0x44,0x00,0x00},
{1,0x65,0x00,0x00},
{2,0x66,0xff,0xf0},
{2,0x67,0xff,0xf0},
{2,0x7a,0xff,0xff},
{2,0x7b,0x00,0x00},
{1,0x25,0x05,0x00},
#endif
	#if 0
{1,0x06,0x0e,0x00},
{1,0x06,0x0e,0x00},
{1,0x07,0x09,0x00},
{2,0x08,0x00,0x34},
{2,0x09,0x00,0x33},
{2,0x0a,0x00,0x32},
{2,0x0b,0x00,0x31},
{2,0x0c,0x00,0x30},
{2,0x0d,0x00,0x2f},
{2,0x0e,0x00,0x2e},
{2,0x0f,0x00,0x2d},
{2,0x10,0x00,0x2c},
{2,0x11,0x00,0x2b},
{2,0x12,0x00,0x2a},
{2,0x13,0x00,0x09},
{2,0x14,0x00,0x08},
{2,0x15,0x00,0x07},
{2,0x16,0x00,0x06},
{1,0x1f,0x00,0x00},
{1,0xd5,0x05,0x00},
{1,0xd8,0x03,0x00},
{1,0x27,0x0a,0x00},
{1,0x2a,0x07,0x00},
{1,0x2c,0x00,0x00},
{1,0x2e,0x07,0x00},
{1,0x2f,0x01,0x00},
{1,0x30,0x06,0x00},
{1,0x31,0x08,0x00},
{1,0xd7,0x04,0x00},
{1,0xdb,0x01,0x00},
{2,0x33,0x00,0x00},
{2,0x34,0x00,0x50},
{2,0x35,0x00,0x40},
{2,0x36,0x00,0x30},
{1,0x37,0x00,0x00},
{1,0x39,0x02,0x00},
{1,0x53,0x16,0x00},
{2,0x54,0x01,0x00},
{2,0x55,0x01,0x00},
{1,0x56,0x02,0x00},
{2,0x5e,0x00,0x60},
{1,0x5b,0x20,0x00},
{1,0x8a,0x06,0x00},
{1,0x8b,0x00,0x00},
{1,0x3d,0x02,0x00},
{1,0x40,0xa0,0x00},
{1,0x44,0x01,0x00},
{1,0x65,0x00,0x00},//0
{2,0x66,0xff,0xf0},
{2,0x67,0xff,0xf0},
{2,0x7a,0xff,0xff},
{2,0x7b,0x00,0x00},
{1,0x25,0x05,0x00},
#endif
};


// For SSD2533 Bug Version Only //
//#define	SSD2533FIXEDCODE
struct ChipSetting ssd253xcfgTable1[]={
{ 1, 0xA4, 0x00, 0x00},			//MCU prescaler default=01
{ 1, 0xD4, 0x08, 0x00},			//Dummy Code
{ 1, 0xD4, 0x08, 0x00},			//Set Osc frequency default=8, range 0 to F
};

struct ChipSetting Reset[]={
{ 0, 0x04, 0x00, 0x00},	// SSD2533
};

struct ChipSetting Resume[]={
{ 0, 0x04, 0x00, 0x00},	// SSD2533
{ 1, 0x25, 0x0A, 0x00}, // Set Operation Mode   //Set from int setting
};

struct ChipSetting Suspend[] ={
{ 1, 0x25, 0x00, 0x00}, // Set Operation Mode
{ 0, 0x05, 0x00, 0x00},	// SSD2533
};

